{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstName","lastName","email","values","setValues","submitted","setSubmitted","valid","setValid","className","onClick","e","preventDefault","type","onChange","event","target","value","placeholder","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsEeA,EAnEL,WAAM,IAAD,EACcC,mBAAS,CAClCC,UAAU,GACVC,SAAS,GACTC,MAAM,KAJK,mBACNC,EADM,KACEC,EADF,OAMoBL,oBAAS,GAN7B,mBAMPM,EANO,KAMIC,EANJ,OAOYP,oBAAS,GAPrB,mBAOPQ,EAPO,KAOAC,EAPA,KAyBb,OACE,qBAAKC,UAAU,MAAf,SACM,qBAAKA,UAAU,aAAf,SACE,uBAAMA,UAAU,gBAAiBC,QAVvB,SAACC,GACnBA,EAAEC,iBACCT,EAAOH,WAAaG,EAAOF,UAAYE,EAAOD,OAC/CM,GAAS,GAEXF,GAAa,IAKL,UACCD,GAAaE,EAAQ,qBAAKE,UAAU,kBAAf,gDAA0E,KAC9F,uBACAI,KAAK,OACLC,SAvBuB,SAACC,GAClCX,EAAU,2BAAID,GAAL,IAAaH,UAAUe,EAAMC,OAAOC,UAuBnCA,MAAOd,EAAOH,UACdS,UAAU,aACVS,YAAY,aACZC,KAAK,cACJd,IAAcF,EAAOH,UAAY,6DAAwC,KAC1E,uBACAa,KAAK,OACLC,SA5BsB,SAACC,GACjCX,EAAU,2BAAID,GAAL,IAAaF,SAASc,EAAMC,OAAOC,UA4BlCA,MAAOd,EAAOF,SACdQ,UAAU,aACVS,YAAY,YACZC,KAAK,aACHd,IAAcF,EAAOF,SAAY,4DAAwC,KAC3E,uBACAY,KAAK,OACLC,SAjCmB,SAACC,GAC9BX,EAAU,2BAAID,GAAL,IAAaD,MAAMa,EAAMC,OAAOC,UAiC/BA,MAAOd,EAAOD,MACdO,UAAU,aACVS,YAAY,QACZC,KAAK,UACJd,IAAcF,EAAOD,MAAQ,yDAAoC,KACjE,uBACDW,KAAK,SAELJ,UAAU,SACVQ,MAAM,qBCjDLG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9dfbfacf.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\n\nconst App=()=> {\n  const [values, setValues] =useState({\n    firstName:'',\n    lastName:'',\n    email:'',\n  });\n  const[submitted, setSubmitted] = useState(false);\n  const[valid, setValid] = useState(false);\n\n  const handleFirstNameInputChange = (event)=>{\n    setValues({...values, firstName:event.target.value})\n  }\n  const handleLastNameInputChange = (event)=>{\n    setValues({...values, lastName:event.target.value})\n  }\n  const handleEmailInputChange = (event)=>{\n    setValues({...values, email:event.target.value})\n  }\n  const handleSubmit =(e)=>{\n    e.preventDefault();\n    if(values.firstName && values.lastName && values.email){\n      setValid(true); \n    }\n    setSubmitted(true); \n  }\n  return (\n    <div className=\"App\">\n          <div className='App-header'>\n            <form className='register-form'  onClick={handleSubmit}>\n            {submitted && valid ? <div className='success-message'>Success !Thank you for registering</div>:null}\n              <input \n              type='text'\n              onChange={handleFirstNameInputChange}\n              value={values.firstName}\n              className='form-field'\n              placeholder='First Name'\n              name='firstName'/>\n              {submitted && !values.firstName ? <span>Please enter a first name</span> :null}  \n              <input \n              type='text'\n              onChange={handleLastNameInputChange}\n              value={values.lastName}\n              className='form-field'\n              placeholder='Last Name'\n              name='lastName'/>\n               {submitted && !values.lastName ?  <span>Please enter a last name</span> : null}\n              <input \n              type='text'\n              onChange={handleEmailInputChange}\n              value={values.email}\n              className='form-field'\n              placeholder='Email'\n              name='email'/>\n              {submitted && !values.email ? <span>Please enter an email</span> :null}\n               <input \n              type='submit'\n             \n              className='button'\n              value='register'\n              />\n\n            </form> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}